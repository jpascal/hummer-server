- if suites.respond_to? :current_page
  = paginate suites, :style => "margin-top: 0px"
- if suites.all.count > 0
  %table.table.table-condensed.table-hover
    %thead
      %tr
        - if columns.include? :suite
          %th= sortable(:build)
        - if columns.include? :tests
          %th= sortable(:total_tests, "Tests")
        - if columns.include? :errors
          %th= sortable(:total_errors, "Errors")
        - if columns.include? :failures
          %th= sortable(:total_failures, "Failures")
        - if columns.include? :skipped
          %th= sortable(:total_skip, "Skip")
        - if columns.include? :passed
          %th= sortable(:total_passed, "Passed")
        - if columns.include? :bugs
          %th Bugs
        - if columns.include? :user and current_user
          %th User
        - if columns.include? :project
          %th Project
        - if columns.include? :created
          %th= sortable(:created_at, "Created")
        %th Actions
    %tbody
      - suites.each do |suite|
        %tr
          - if columns.include? :suite
            %td
              = link_to suite.build, project_suite_path(suite.project_id, suite)
              - if suite.features.all.any?
                %br
                - suite.features.each do |feature|
                  %span.label{:class => (params[:feature] == feature.to_s ? "label-success" : "label-default")}= feature
          - if columns.include? :tests
            %td= suite.total_tests
          - if columns.include? :errors
            %td= suite.total_errors
          - if columns.include? :failures
            %td= suite.total_failures
          - if columns.include? :skipped
            %td= suite.total_skip
          - if columns.include? :passed
            %td= suite.total_passed
          - if columns.include? :bugs
            %td= suite.bugs.count
          - if columns.include? :user and current_user
            %td= link_to_user suite.user
          - if columns.include? :project
            %td= suite.project ? link_to(suite.project.name, project_path(suite.project)) : ""
          - if columns.include? :created
            %td= l(suite.created_at, :format => "%H:%M / %d.%m.%Y")
          %td{:style => "width: 1%;", :nowrap => true}
            - if defined? buttons
              = render buttons, :suite => suite
            - else
              = render "suites/buttons", :suite => suite
- else
  %p.well.text-center{:style => "margin-top: 20px;"}
    No suites
- if suites.respond_to? :current_page
  = paginate suites, :style => "margin-bottom: 0px"

